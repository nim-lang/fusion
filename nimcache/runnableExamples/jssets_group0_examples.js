/* Generated by the Nim Compiler v2.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
NTI134217745.base = NTI33555172;
var NNI33555824 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555824.node = NNI33555824;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557255, src_33557256, ti_33557257) {
  var result_33557266 = null;

    switch (ti_33557257.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557246(ti_33557257))) {
      result_33557266 = src_33557256;
      }
      else {
        result_33557266 = [src_33557256[0], src_33557256[1]];
      }
      
      break;
    case 19:
            if (dest_33557255 === null || dest_33557255 === undefined) {
        dest_33557255 = {};
      }
      else {
        for (var key in dest_33557255) { delete dest_33557255[key]; }
      }
      for (var key in src_33557256) { dest_33557255[key] = src_33557256[key]; }
      result_33557266 = dest_33557255;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557257.base == null))) {
      result_33557266 = nimCopy(dest_33557255, src_33557256, ti_33557257.base);
      }
      else {
      if ((ti_33557257.kind == 17)) {
      result_33557266 = (dest_33557255 === null || dest_33557255 === undefined) ? {m_type: ti_33557257} : dest_33557255;
      }
      else {
        result_33557266 = (dest_33557255 === null || dest_33557255 === undefined) ? {} : dest_33557255;
      }
      }
      nimCopyAux(result_33557266, src_33557256, ti_33557257.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557256)) { 
        if(dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
          dest_33557255 = new src_33557256.constructor(src_33557256);
        } else {
          dest_33557255.set(src_33557256, 0);
        }
        result_33557266 = dest_33557255;
      } else {
        if (src_33557256 === null) {
          result_33557266 = null;
        }
        else {
          if (dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
            dest_33557255 = new Array(src_33557256.length);
          }
          result_33557266 = dest_33557255;
          for (var i = 0; i < src_33557256.length; ++i) {
            result_33557266[i] = nimCopy(result_33557266[i], src_33557256[i], ti_33557257.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557256 === null) {
        result_33557266 = null;
      }
      else {
        if (dest_33557255 === null || dest_33557255 === undefined || dest_33557255.length != src_33557256.length) {
          dest_33557255 = new Array(src_33557256.length);
        }
        result_33557266 = dest_33557255;
        for (var i = 0; i < src_33557256.length; ++i) {
          result_33557266[i] = nimCopy(result_33557266[i], src_33557256[i], ti_33557257.base);
        }
      }
    
      break;
    case 28:
            if (src_33557256 !== null) {
        result_33557266 = src_33557256.slice(0);
      }
    
      break;
    default: 
      result_33557266 = src_33557256;
      break;
    }

  return result_33557266;

}

function arrayConstr(len_33557301, value_33557302, typ_33557303) {
        var result = new Array(len_33557301);
    for (var i = 0; i < len_33557301; ++i) result[i] = nimCopy(null, value_33557302, typ_33557303);
    return result;
  

  
}

function mnewString(len_33556990) {
        var result = new Array(len_33556990);
    for (var i = 0; i < len_33556990; i++) {result[i] = 0;}
    return result;
  

  
}

function addInt(a_33557037, b_33557038) {
        var result = a_33557037 + b_33557038;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557311, a_33557312, b_33557313) {
  var result_33557314 = 0;

  BeforeRet: {
    if (((a_33557312 <= i_33557311) && (i_33557311 <= b_33557313))) {
    result_33557314 = i_33557311;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557314;

}

function chckIndx(i_33557306, a_33557307, b_33557308) {
  var result_33557309 = 0;

  BeforeRet: {
    if (((a_33557307 <= i_33557306) && (i_33557306 <= b_33557308))) {
    result_33557309 = i_33557306;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557306, a_33557307, b_33557308);
    }
    
  };

  return result_33557309;

}

function cstrToNimstr(c_33556888) {
      var ln = c_33556888.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556888.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556888.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_33556891) {
  var result_33556892 = null;

    var res_33556933 = newSeq_33556909((s_33556891).length);
    var i_33556934 = 0;
    var j_33556935 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556934 < (s_33556891).length)) break Label2;
          var c_33556936 = s_33556891[i_33556934];
          if ((c_33556936 < 128)) {
          res_33556933[j_33556935] = String.fromCharCode(c_33556936);
          i_33556934 += 1;
          }
          else {
            var helper_33556948 = newSeq_33556909(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556949 = c_33556936.toString(16);
                  if ((((code_33556949) == null ? 0 : (code_33556949).length) == 1)) {
                  helper_33556948.push("%0");;
                  }
                  else {
                  helper_33556948.push("%");;
                  }
                  
                  helper_33556948.push(code_33556949);;
                  i_33556934 += 1;
                  if ((((s_33556891).length <= i_33556934) || (s_33556891[i_33556934] < 128))) {
                  break Label3;
                  }
                  
                  c_33556936 = s_33556891[i_33556934];
                }
            };
++excHandler;
            try {
            res_33556933[j_33556935] = decodeURIComponent(helper_33556948.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556933[j_33556935] = helper_33556948.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556935 += 1;
        }
    };
    if (res_33556933.length < j_33556935) { for (var i = res_33556933.length ; i < j_33556935 ; ++i) res_33556933.push(null); }
               else { res_33556933.length = j_33556935; };
    result_33556892 = res_33556933.join("");

  return result_33556892;

}

function raiseException(e_33556643, ename_33556644) {
    e_33556643.name = ename_33556644;
    if ((excHandler == 0)) {
    unhandledException(e_33556643);
    }
    
    e_33556643.trace = nimCopy(null, rawWriteStackTrace_33556594(), NTI33554449);
    throw e_33556643;

  
}

function makeNimstrLit(c_33556885) {
      var result = [];
  for (var i = 0; i < c_33556885.length; ++i) {
    result[i] = c_33556885.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_33557041, b_33557042) {
        var result = a_33557041 - b_33557042;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33557028, b_33557029) {
        if (a_33557028 == b_33557029) return true;
    if (a_33557028 === null && b_33557029.length == 0) return true;
    if (b_33557029 === null && a_33557028.length == 0) return true;
    if ((!a_33557028) || (!b_33557029)) return false;
    var alen = a_33557028.length;
    if (alen != b_33557029.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557028[i] != b_33557029[i]) return false;
    return true;
  

  
}

function addChar(x_33557402, c_33557403) {
    x_33557402.push(c_33557403);

  
}
var F = {procname: "module macros", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_738197679 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.filename = "jsffi.nim";
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/js/jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jssets", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/src/fusion/js/jssets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jssets", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/src/fusion/js/jssets.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function len_671088661(this_671088662) {
  var result_671088663 = 0;

  var F = {procname: "jssets.len", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/src/fusion/js/jssets.nim", line: 0};
  framePtr = F;
    F.line = 31;
    F.filename = "jssets.nim";
    result_671088663 = ((this_671088662.size) | 0);
  framePtr = F.prev;

  return result_671088663;

}

function isFatPointer_33557246(ti_33557247) {
  var result_33557248 = false;

  BeforeRet: {
    result_33557248 = !((ConstSet1[ti_33557247.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557248;

}

function nimCopyAux(dest_33557259, src_33557260, n_33557261) {
    switch (n_33557261.kind) {
    case 0:
      break;
    case 1:
            dest_33557259[n_33557261.offset] = nimCopy(dest_33557259[n_33557261.offset], src_33557260[n_33557261.offset], n_33557261.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557261.sons.length; i++) {
      nimCopyAux(dest_33557259, src_33557260, n_33557261.sons[i]);
    }
    
      break;
    case 3:
            dest_33557259[n_33557261.offset] = nimCopy(dest_33557259[n_33557261.offset], src_33557260[n_33557261.offset], n_33557261.typ);
      for (var i = 0; i < n_33557261.sons.length; ++i) {
        nimCopyAux(dest_33557259, src_33557260, n_33557261.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556366(x_33556367, x_33556367_Idx, y_33556368) {
          if (x_33556367[x_33556367_Idx] === null) { x_33556367[x_33556367_Idx] = []; }
      var off = x_33556367[x_33556367_Idx].length;
      x_33556367[x_33556367_Idx].length += y_33556368.length;
      for (var i = 0; i < y_33556368.length; ++i) {
        x_33556367[x_33556367_Idx][off+i] = y_33556368.charCodeAt(i);
      }
    

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557035) {
        if (a_33557035 > 2147483647 || a_33557035 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556802, a_33556803, b_33556804) {
    var Temporary1;

    if ((b_33556804 < a_33556803)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556802) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556803) || [],[32,46,46,32] || [],HEX24_369098760(b_33556804) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990087(result_301990089, result_301990089_Idx, x_301990090, start_301990091, n_301990092) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990093 = (result_301990089[result_301990089_Idx]).length;
    F.line = 45;
    if (result_301990089[result_301990089_Idx].length < (Temporary1 = chckRange(addInt(old_301990093, n_301990092), 0, 2147483647), Temporary1)) { for (var i = result_301990089[result_301990089_Idx].length; i < Temporary1; ++i) result_301990089[result_301990089_Idx].push(0); }
         else {result_301990089[result_301990089_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990107 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_654311668 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_654311668 < n_301990092)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990107 = i_654311668;
            F.line = 50;
            result_301990089[result_301990089_Idx][chckIndx(addInt(old_301990093, iHEX60gensym4_301990107), 0, (result_301990089[result_301990089_Idx]).length - 1)] = x_301990090.charCodeAt(chckIndx(addInt(start_301990091, iHEX60gensym4_301990107), 0, (x_301990090).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_654311668 = addInt(i_654311668, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990083(result_301990085, result_301990085_Idx, x_301990086) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars_301990087(result_301990085, result_301990085_Idx, x_301990086, 0, ((x_301990086) == null ? 0 : (x_301990086).length));
  framePtr = F.prev;

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars_301990083(result_301990109, result_301990109_Idx, ((x_301990110) + ""));
  framePtr = F.prev;

  
}

function addInt_301990126(result_301990127, result_301990127_Idx, x_301990128) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt_301990108(result_301990127, result_301990127_Idx, BigInt(x_301990128));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990126(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556501(f_33556502) {
  var result_33556503 = [[]];

    var it_33556511 = f_33556502;
    var i_33556512 = 0;
    var total_33556513 = 0;
    var tempFrames_33556514 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555824);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556511 == null)) && (i_33556512 <= 63))) break Label2;
          tempFrames_33556514[i_33556512].Field0 = it_33556511.procname;
          tempFrames_33556514[i_33556512].Field1 = it_33556511.line;
          tempFrames_33556514[i_33556512].Field2 = it_33556511.filename;
          i_33556512 += 1;
          total_33556513 += 1;
          it_33556511 = it_33556511.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556511 == null))) break Label4;
          total_33556513 += 1;
          it_33556511 = it_33556511.prev;
        }
    };
    result_33556503[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556513 == i_33556512))) {
    result_33556503[0].push.apply(result_33556503[0], [40]);;
    result_33556503[0].push.apply(result_33556503[0], HEX24_369098760((total_33556513 - i_33556512)));;
    result_33556503[0].push.apply(result_33556503[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556544 = 0;
      var colontmp__654311660 = 0;
      colontmp__654311660 = (i_33556512 - 1);
      var res_654311662 = colontmp__654311660;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_654311662)) break Label7;
            j_33556544 = res_654311662;
            result_33556503[0].push.apply(result_33556503[0], cstrToNimstr(tempFrames_33556514[j_33556544].Field2));;
            if ((0 < tempFrames_33556514[j_33556544].Field1)) {
            result_33556503[0].push.apply(result_33556503[0], [40]);;
            addInt_301990126(result_33556503, 0, tempFrames_33556514[j_33556544].Field1);
            if (false) {
            result_33556503[0].push.apply(result_33556503[0], [44,32]);;
            addInt_301990126(result_33556503, 0, 0);
            }
            
            result_33556503[0].push.apply(result_33556503[0], [41]);;
            }
            
            result_33556503[0].push.apply(result_33556503[0], [32,97,116,32]);;
            add_33556366(result_33556503, 0, tempFrames_33556514[j_33556544].Field0);
            result_33556503[0].push.apply(result_33556503[0], [10]);;
            res_654311662 -= 1;
          }
      };
    };

  return result_33556503[0];

}

function rawWriteStackTrace_33556594() {
  var result_33556595 = [];

    if (!((framePtr == null))) {
    result_33556595 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556501(framePtr) || []), NTI33554449);
    }
    else {
      result_33556595 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556595;

}

function newSeq_33556909(len_33556911) {
  var result_33556912 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 636;
    F.filename = "system.nim";
    result_33556912 = new Array(len_33556911); for (var i = 0 ; i < len_33556911 ; ++i) { result_33556912[i] = null; }  framePtr = F.prev;

  return result_33556912;

}

function unhandledException(e_33556639) {
    var buf_33556640 = [[]];
    if (!(((e_33556639.message).length == 0))) {
    buf_33556640[0].push.apply(buf_33556640[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556640[0].push.apply(buf_33556640[0], e_33556639.message);;
    }
    else {
    buf_33556640[0].push.apply(buf_33556640[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556640[0].push.apply(buf_33556640[0], [32,91]);;
    add_33556366(buf_33556640, 0, e_33556639.name);
    buf_33556640[0].push.apply(buf_33556640[0], [93,10]);;
    buf_33556640[0].push.apply(buf_33556640[0], rawWriteStackTrace_33556594());;
    var cbuf_33556641 = toJSStr(buf_33556640[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556641);
  }
  else {
    throw cbuf_33556641;
  }
  

  
}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function HEX3DHEX3D_654311465(x_654311467, y_654311468) {
  var result_654311469 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system/comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 326;
    F.filename = "comparisons.nim";
    var sameObject_654311476 = false;
    F.line = 327;
    sameObject_654311476 = x_654311467 === y_654311468
    if (sameObject_654311476) {
    F.line = 328;
    result_654311469 = true;
    break BeforeRet;
    }
    
    if (!(((x_654311467).length == (y_654311468).length))) {
    F.line = 331;
    result_654311469 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 333;
      var i_654311490 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__654311673 = 0;
      F.line = 333;
      F.filename = "comparisons.nim";
      colontmp__654311673 = subInt((x_654311467).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_654311675 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_654311675 <= colontmp__654311673)) break Label3;
            F.line = 333;
            F.filename = "comparisons.nim";
            i_654311490 = res_654311675;
            if (!((x_654311467[chckIndx(i_654311490, 0, (x_654311467).length - 1)] == y_654311468[chckIndx(i_654311490, 0, (y_654311468).length - 1)]))) {
            F.line = 335;
            result_654311469 = false;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_654311675 = addInt(res_654311675, 1);
          }
      };
    };
    F.line = 337;
    F.filename = "comparisons.nim";
    result_654311469 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_654311469;

}

function addEscapedChar_33557992(s_33557993, s_33557993_Idx, c_33557994) {
  var F = {procname: "system.addEscapedChar", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2566;
    F.filename = "system.nim";
    switch (c_33557994) {
    case 7:
      F.line = 2567;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,97]);;
      break;
    case 8:
      F.line = 2568;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,98]);;
      break;
    case 9:
      F.line = 2569;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,116]);;
      break;
    case 10:
      F.line = 2570;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,110]);;
      break;
    case 11:
      F.line = 2571;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,118]);;
      break;
    case 12:
      F.line = 2572;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,102]);;
      break;
    case 13:
      F.line = 2573;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,114]);;
      break;
    case 27:
      F.line = 2574;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,101]);;
      break;
    case 92:
      F.line = 2575;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,92]);;
      break;
    case 39:
      F.line = 2576;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,39]);;
      break;
    case 34:
      F.line = 2577;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      F.line = 2578;
      addChar(s_33557993[s_33557993_Idx], c_33557994);;
      break;
    default: 
      F.line = 2580;
      s_33557993[s_33557993_Idx].push.apply(s_33557993[s_33557993_Idx], [92,120]);;
      F.line = 2582;
      var n_33558004 = c_33557994;
      F.line = 2583;
      addChar(s_33557993[s_33557993_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33558004 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      F.line = 2584;
      addChar(s_33557993[s_33557993_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33558004 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }
  framePtr = F.prev;

  
}

function addQuoted_671088704(s_671088706, s_671088706_Idx, x_671088707) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2612;
    F.filename = "system.nim";
    s_671088706[s_671088706_Idx].push.apply(s_671088706[s_671088706_Idx], [34]);;
    Label1: {
      F.line = 2613;
      var c_671088708 = 0;
      F.line = 83;
      F.filename = "iterators.nim";
      var iHEX60gensym13_654311684 = 0;
      F.line = 84;
      var nHEX60gensym13_654311685 = ((x_671088707) == null ? 0 : (x_671088707).length);
      Label2: {
        F.line = 88;
          Label3: while (true) {
          if (!(iHEX60gensym13_654311684 < nHEX60gensym13_654311685)) break Label3;
            F.line = 2613;
            F.filename = "system.nim";
            c_671088708 = x_671088707.charCodeAt(chckIndx(iHEX60gensym13_654311684, 0, (x_671088707).length - 1));
            if ((c_671088708 <= 127)) {
            F.line = 2617;
            addEscapedChar_33557992(s_671088706, s_671088706_Idx, c_671088708);
            }
            else {
              F.line = 2619;
            addChar(s_671088706[s_671088706_Idx], c_671088708);;
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            iHEX60gensym13_654311684 += 1;
          }
      };
    };
    F.line = 2620;
    F.filename = "system.nim";
    s_671088706[s_671088706_Idx].push.apply(s_671088706[s_671088706_Idx], [34]);;
  framePtr = F.prev;

  
}

function collectionToString_671088671(x_671088673, prefix_671088674, separator_671088675, suffix_671088676) {
  var result_671088677 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 91;
    F.filename = "dollars.nim";
    result_671088677[0] = nimCopy(null, prefix_671088674, NTI33554449);
    F.line = 92;
    var firstElement_671088678 = true;
    Label1: {
      F.line = 93;
      var value_671088700 = null;
      F.line = 249;
      F.filename = "iterators.nim";
      var i_654311679 = 0;
      F.line = 250;
      var L_654311680 = (x_671088673).length;
      Label2: {
        F.line = 251;
          Label3: while (true) {
          if (!(i_654311679 < L_654311680)) break Label3;
            F.line = 93;
            F.filename = "dollars.nim";
            value_671088700 = x_671088673[i_654311679];
            if (firstElement_671088678) {
            F.line = 95;
            firstElement_671088678 = false;
            }
            else {
              F.line = 97;
            result_671088677[0].push.apply(result_671088677[0], separator_671088675);;
            }
            
            if ((value_671088700 == null)) {
            F.line = 102;
            result_671088677[0].push.apply(result_671088677[0], [110,105,108]);;
            }
            else {
              F.line = 104;
            addQuoted_671088704(result_671088677, 0, value_671088700);
            }
            
            F.line = 13;
            F.filename = "iterators.nim";
            i_654311679 += 1;
            if (!(((x_671088673).length == L_654311680))) {
            F.line = 254;
            failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/nim/lib/system/iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 107;
    F.filename = "dollars.nim";
    result_671088677[0].push.apply(result_671088677[0], suffix_671088676);;
  framePtr = F.prev;

  return result_671088677[0];

}

function HEX24_671088667(x_671088669) {
  var result_671088670 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "/home/runner/work/fusion/fusion/nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 118;
    F.filename = "dollars.nim";
    result_671088670 = nimCopy(null, collectionToString_671088671(x_671088669, [64,91], [44,32], [93]), NTI33554449);
  framePtr = F.prev;

  return result_671088670;

}

function HEX24_671088664(this_671088665) {
  var result_671088666 = [];

  var F = {procname: "jssets.$", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/src/fusion/js/jssets.nim", line: 0};
  framePtr = F;
    F.line = 33;
    F.filename = "jssets.nim";
    result_671088666 = nimCopy(null, HEX24_671088667(  (() => {const result = []; this_671088665.forEach(item => result.push(JSON.stringify(item))); return result})()), NTI33554449);
  framePtr = F.prev;

  return result_671088666;

}
var F = {procname: "module jssets_examples_1", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim", line: 0};
framePtr = F;
if (false) {
F.line = 36;
F.filename = "jssets.nim";
var a_654311440 = new Set([(1), (2), (3), (4)]);
F.line = 36;
var b_654311450 = new Set([(1.0), (2.0), (3.0)]);
if (!((len_671088661(a_654311440) == 4))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(13, 5) `a.len == 4` "));
}

if (!((len_671088661(b_654311450) == 3))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(14, 5) `b.len == 3` "));
}

if (!(HEX3DHEX3D_654311465(  (() => {const result = []; a_654311440.forEach(item => result.push(JSON.stringify(item))); return result})(), ["1", "2", "3", "4"]))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(15, 5) `a.toString() == @[\"1\".cstring, \"2\", \"3\", \"4\"]` "));
}

if (!(HEX3DHEX3D_654311465(  (() => {const result = []; b_654311450.forEach(item => result.push(JSON.stringify(item))); return result})(), ["1", "2", "3"]))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(16, 5) `b.toString() == @[\"1\".cstring, \"2\", \"3\"]` "));
}

F.line = 36;
a_654311440.clear();
F.line = 36;
b_654311450.clear();
F.line = 36;
var d_654311518 = new Set([(1), (2), (3)]);
if (!((len_671088661(d_654311518) == 3))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(20, 5) `d.len == 3` "));
}

F.line = 36;
d_654311518.add((4));
F.line = 36;
d_654311518.delete((2));
if (!(d_654311518.has((3)))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(23, 5) `3.toJs in d` "));
}

if (!(!(d_654311518.has(("3"))))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(24, 5) `\"3\".cstring.toJs notin d` "));
}

if (!(d_654311518.has((1)))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(25, 5) `d.contains 1.toJs` "));
}

if (!(eqStrings(HEX24_671088664(d_654311518), [64,91,34,49,34,44,32,34,51,34,44,32,34,52,34,93]))) {
F.line = 36;
failedAssertImpl_268435541(makeNimstrLit("/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim(26, 5) `$d == \"\"\"@[\"1\", \"3\", \"4\"]\"\"\"` "));
}

}

framePtr = F.prev;
var F = {procname: "module jssets_examples_1", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_examples_1.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jssets_group0_examples", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jssets_group0_examples", prev: framePtr, filename: "/home/runner/work/fusion/fusion/fusion/htmldocs/nimcache/runnableExamples/jssets_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
